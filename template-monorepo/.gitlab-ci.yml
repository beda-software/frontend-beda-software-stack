stages:
  - build_test_release
  - deploy

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
  RELEASE_IMAGE: "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}"
  BUILD_IMAGE: "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}"
  CACHE_IMAGE: "${CI_REGISTRY_IMAGE}:latest"

services:
  - docker:19-dind

.build_test_release: &build_test_release
  stage: build_test_release
  image: tmaier/docker-compose:19
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - |
      if [ "${CI_COMMIT_REF_NAME}" = "production" ]; then
          export TIER="production"
      elif [ "${CI_COMMIT_REF_NAME}" = "staging" ]; then
          export TIER="staging"
      else
          export TIER="develop"
      fi
      export TESTS_BACKEND_IMAGE="${TESTS_BACKEND_IMAGE_REPOSITORY}:${TIER}"
  script:
    # BUILD
    - echo -e "section_start:`date +%s`:build_section\r\e[0KBuild"
    - docker pull $CACHE_IMAGE || true
    - docker build --cache-from $CACHE_IMAGE --build-arg TIER=$TIER --tag $BUILD_IMAGE .
    - docker tag $BUILD_IMAGE $CACHE_IMAGE
    - docker push $CACHE_IMAGE
    - echo -e "section_end:`date +%s`:build_section\r\e[0K"

    # TEST
    - echo -e "section_start:`date +%s`:test_section\r\e[0KTest"
    - docker run --rm "$BUILD_IMAGE" yarn typecheck
    - ./run_test.sh
    - echo -e "section_end:`date +%s`:test_section\r\e[0K"

    # RELEASE
    - echo -e "section_start:`date +%s`:release_section\r\e[0KRelease"
    - echo FROM $BUILD_IMAGE as builder > Dockerfile.web.release
    - cat Dockerfile.web.release.tpl >> Dockerfile.web.release
    - docker build -t $RELEASE_IMAGE -f Dockerfile.web.release .
    - docker push $RELEASE_IMAGE
    - echo -e "section_end:`date +%s`:release_section\r\e[0K"

build_test_release:
  <<: *build_test_release
  artifacts:
    paths:
    - ./web/coverage
    - ./mobile/coverage

deploy_web:
  stage: deploy
  image: registry.beda.software/ansible_deploy/helm_deploy:3
  variables:
    APP_NAME: web
  script:
    - cd ./chart
    - ./deploy.sh
  only:
     refs:
      - production
      - staging
      - develop
    changes:
      - Dockerfile
      - Dockerfile.web.release.tpl
      - chart/**/*
      - web/**/*
      - shared/**/*

deploy_mobile:
  stage: deploy
  image: curlimages/curl:7.76.0
  before_script:
    - |
      if [ "${CI_COMMIT_REF_NAME}" = "production" ]; then
          export TIER="production"
      elif [ "${CI_COMMIT_REF_NAME}" = "staging" ]; then
          export TIER="staging"
      else
          export TIER="develop"
      fi
  script:
    - curl https://app.bitrise.io/app/$BITRISE_APP_ID/build/start.json --fail-with-body --data "{\"hook_info\":{\"type\":\"bitrise\",\"build_trigger_token\":\"$BITRISE_BUILD_TRIGGER_TOKEN\"},\"build_params\":{\"workflow_id\":\"ios\",\"branch\":\"$CI_COMMIT_REF_NAME\",\"commit_hash\":\"$CI_COMMIT_SHA\",\"commit_message\":\"$CI_COMMIT_TITLE\",\"environments\":[{\"mapped_to\":\"TIER\",\"value\":\"$TIER\",\"is_expand\":true}]},\"triggered_by\":\"GitLab CI\"}"
    - curl https://app.bitrise.io/app/$BITRISE_APP_ID/build/start.json --fail-with-body --data "{\"hook_info\":{\"type\":\"bitrise\",\"build_trigger_token\":\"$BITRISE_BUILD_TRIGGER_TOKEN\"},\"build_params\":{\"workflow_id\":\"android\",\"branch\":\"$CI_COMMIT_REF_NAME\",\"commit_hash\":\"$CI_COMMIT_SHA\",\"commit_message\":\"$CI_COMMIT_TITLE\",\"environments\":[{\"mapped_to\":\"TIER\",\"value\":\"$TIER\",\"is_expand\":true}]},\"triggered_by\":\"GitLab CI\"}"
  only:
    refs:
      - production
      - staging
      - develop
    changes:
      - mobile/**/*
      - shared/**/*

