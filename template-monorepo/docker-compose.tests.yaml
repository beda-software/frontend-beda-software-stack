version: '3.1'
services:
  dockerize:
    image: jwilder/dockerize
    command: dockerize -wait http://devbox:8080/healthcheck -timeout 300s
    depends_on:
      - backend
    links:
      - backend
  backend:
    image: $BACKEND_IMAGE
    command: ["wait-for-it.sh", "devbox:8080", "--strict", "--timeout=0", "--", "gunicorn", "main:create_app", "--worker-class", "aiohttp.worker.GunicornWebWorker", "-b", "0.0.0.0:8081"]
    env_file:
    - env_tests
    depends_on:
      - devbox
    links:
      - devbox
    volumes:
      - ./wait-for-it.sh:/usr/local/bin/wait-for-it.sh
  devbox:
    image: healthsamurai/devbox:0.4.9
    command: ["wait-for-it.sh", "database:5432", "--strict", "--timeout=0", "--", "java", "-jar", "/aidbox.jar", "-m", "devbox.core"]
    depends_on:
      - devbox-db
    links:
      - "devbox-db:database"
    env_file:
      - env_tests
    environment:
      AIDBOX_LICENSE_ID: ${AIDBOX_LICENSE_ID_TESTS}
      AIDBOX_LICENSE_KEY: ${AIDBOX_LICENSE_KEY_TESTS}
    volumes:
      - ./wait-for-it.sh:/usr/local/bin/wait-for-it.sh
    ports:
      - 8181:8080
  devbox-db:
    image: aidbox/db:11.4.0.2
    environment:
      POSTGRES_USER:     postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB:       devbox
